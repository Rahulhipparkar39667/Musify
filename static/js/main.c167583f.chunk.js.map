{"version":3,"sources":["components/Search.js","components/Artist.js","components/Tracks.js","components/App.js","index.js"],"names":["Search","state","artistQuery","updateArtistQuery","event","setState","target","value","handleKeyPress","key","searchArtist","props","className","onChange","this","onKeyPress","placeholder","type","onClick","Component","Artist","artist","images","name","followers","genres","total","join","src","url","alt","style","width","height","borderRadius","objectFit","Tracks","playing","audio","playingPreviewUrl","playAudio","previewUrl","Audio","pause","play","trackIcon","track","preview_url","tracks","map","id","album","API_ADDRESS","App","fetch","then","response","json","artists","items","catch","error","alert","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c167583f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'react-fontawesome';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass Search extends Component {\r\n  state = { artistQuery: '' };\r\n\r\n  updateArtistQuery = event => {\r\n    this.setState({ artistQuery: event.target.value });\r\n  }\r\n\r\n  handleKeyPress = event => {\r\n    if (event.key === 'Enter') {\r\n      this.searchArtist();\r\n    }\r\n  }\r\n\r\n  searchArtist = () => {\r\n    this.props.searchArtist(this.state.artistQuery);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        <span className=\"search-box\">\r\n        <input className=\"search-txt\"\r\n       \r\n          onChange={this.updateArtistQuery}\r\n          onKeyPress={this.handleKeyPress}\r\n          placeholder='Search for an Artist'/>\r\n          <span className ='search-btn' type=\"button\"  onClick={this.searchArtist}><i className='fa fa-search'></i></span>\r\n        </span>\r\n      </div>\r\n    \r\n    \r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\n\r\nconst Artist = ({ artist }) => {\r\n  if (!artist) return null;\r\n\r\n  const { images, name, followers, genres } = artist;\r\n\r\n  return (\r\n    <div className='profile'> \r\n      <p>{name}</p>\r\n      <p>{followers.total} followers</p>\r\n      <p>{genres.join(', ')}</p>\r\n      <img\r\n        className='profile-img'\r\n        src={images[0] && images[0].url}\r\n        alt='artist-profile'\r\n        style={{\r\n          \r\n          width: 200,\r\n          height: 200,\r\n          borderRadius: 100,\r\n          objectFit: 'cover'\r\n\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Artist;\r\n","import React, { Component } from 'react';\r\n\r\nclass Tracks extends Component {\r\n  state = { playing: false, audio: null, playingPreviewUrl: null };\r\n\r\n  playAudio = previewUrl => () => {\r\n    const audio = new Audio(previewUrl);\r\n\r\n    if (!this.state.playing) {\r\n      audio.play();\r\n      this.setState({ playing: true, audio, playingPreviewUrl: previewUrl });\r\n    } else {\r\n      this.state.audio.pause();\r\n\r\n      if (this.state.playingPreviewUrl === previewUrl) {\r\n        this.setState({ playing: false });\r\n      } else {\r\n        audio.play();\r\n        this.setState({ audio, playingPreviewUrl: previewUrl });\r\n      }\r\n    }\r\n  }\r\n\r\n  trackIcon = track => {\r\n    if (!track.preview_url) {\r\n      return <span>N/A</span>;\r\n    }\r\n\r\n    if (\r\n      this.state.playing &&\r\n      this.state.playingPreviewUrl === track.preview_url\r\n    ) {\r\n      return <span>| |</span>;\r\n    }\r\n\r\n    return <span>&#9654;</span>;\r\n  }\r\n\r\n  render() {\r\n    const { tracks } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          tracks.map(track => {\r\n            const { id, name, album, preview_url } = track;\r\n\r\n            return (\r\n              <div\r\n                key={id}\r\n                onClick={this.playAudio(preview_url)}\r\n                className='track'\r\n              >\r\n                <img\r\n                  src={album.images[0].url}\r\n                  alt=\"\"\r\n                  className='track-image'\r\n                />\r\n                <p className='track-text'>{name}</p>\r\n                <p className='track-icon'>{this.trackIcon(track)}</p>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Artist from './Artist';\r\nimport Tracks from './Tracks';\r\n\r\nconst API_ADDRESS = 'https://spotify-api-wrapper.appspot.com';\r\n\r\nclass App extends Component {\r\n  state = { artist: null, tracks: [] };\r\n\r\n  searchArtist = artistQuery => {\r\n    fetch(`${API_ADDRESS}/artist/${artistQuery}`)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if (json.artists.total > 0) {\r\n          const artist = json.artists.items[0];\r\n\r\n          this.setState({ artist });\r\n\r\n          fetch(`${API_ADDRESS}/artist/${artist.id}/top-tracks`)\r\n            .then(response => response.json())\r\n            .then(json => this.setState({ tracks: json.tracks }))\r\n            .catch(error => alert(error.message));\r\n        }\r\n      })\r\n      .catch(error => alert(error.message));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <h2 >Musify</h2>\r\n        <Search searchArtist={this.searchArtist} />\r\n        <Artist artist={this.state.artist} />\r\n        <Tracks tracks={this.state.tracks} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}